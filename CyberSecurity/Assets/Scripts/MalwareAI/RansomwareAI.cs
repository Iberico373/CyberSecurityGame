using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.SceneManagement;
public class RansomwareAI : BaseAI
{
    private void Awake()
    {
        manager = UnitManager.instance;
        anim = GetComponent<Animator>();
        inAction = true;

        GetAggroList();
        SetLowestAggroPriorityByTag("Security Control");
        SetHighestAggroPriorityByTag("Data Structure");
    }

    private void Update()
    {
        if (health <= 0)
        {
            if (SceneManager.GetActiveScene().name == "TestLevel")
            {
                UnitManager.instance.objectives.GetComponent<TutorialObject>().kill.SetActive(false);
                UnitManager.instance.objectives.GetComponent<TutorialObject>().killcomp.SetActive(true);
            }

            else if (SceneManager.GetActiveScene().name == "Level1")
            {
                UnitManager.instance.objectives.GetComponent<Level1Object>().Killing();
            }

            else if (SceneManager.GetActiveScene().name == "Level2")
            {
                UnitManager.instance.objectives.GetComponent<Level2Object>().Killing();
            }

            else if (SceneManager.GetActiveScene().name == "Level3")
            {
                UnitManager.instance.objectives.GetComponent<Level3Object>().Killing();
            }

            manager.unitList.Remove(this);

            foreach (GameObject ds in infectedDS)
            {
                ds.GetComponent<DataStructure>().isLocked = false;
            }

            Destroy(gameObject);
            GameObject summonedDeath = Instantiate(deathExplosion);
            summonedDeath.transform.position = transform.position;
            Destroy(summonedDeath, 5);
            manager.slaughtered++;
        }

        if (isDetected)
        {
            aura.SetActive(false);

            if (SceneManager.GetActiveScene().name == "TestLevel")
            {
                manager.objectives.GetComponent<TutorialObject>().scancomp.SetActive(true);
            }
        }

        if (!inAction && manager.selectedCharacter.name.Equals(transform.name))
        {
            if (InRange())
            {
                Action();
            }

            inAction = true;
            manager.Invoke("EndTurn", 1);
        }
    }

    public override void Action()
    {
        if (target.CompareTag("Security Control") || target.name.Equals("Objective"))
        {
            transform.LookAt(target.transform);
            anim.SetTrigger("Attack");
            target.GetComponent<Unit>().health -= 10;
            manager.battleLog.UpdateBattleLog(transform.name, " did 10 damage to ", target.name);

            if (target.GetComponent<Unit>().health <= 0)
            {
                target.GetComponent<Unit>().anim.SetTrigger("Dead");
            }
            else
            {
                target.GetComponent<Unit>().anim.SetTrigger("Hurt");
            }
        }

        else if (target.name.Equals("Data Structure"))
        {
            Instantiate(capEffect, target.gameObject.transform);
            target.GetComponent<DataStructure>().isLocked = true;
            infectedDS.Add(target);
            manager.battleLog.UpdateBattleLog(transform.name, " captured a ", target.name);
        }
    }
}
